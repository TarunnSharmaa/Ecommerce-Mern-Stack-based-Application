{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\MernStackBootCamp\\\\frontEnd\\\\src\\\\core\\\\Paymentb.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { loadCart, cartEmpty } from \"./helper/cartHelper\";\nimport { Link } from \"react-router-dom\";\nimport { getmeToken, processPayment } from \"./helper/paymentbhelper\";\nimport { createOrder } from \"./helper/orderHelper\";\nimport { isAutheticated } from \"../auth/helper\";\nimport DropIn from \"braintree-web-drop-in-react\";\n\nconst Paymentb = ({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  const [info, setInfo] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: \"\",\n    instance: {}\n  });\n\n  const userId = isAutheticated() && isAutheticated().user._id;\n\n  const token = isAutheticated() && isAutheticated().token;\n\n  const getToken = (userId, token) => {\n    getmeToken(userId, token).then(info => {\n      // console.log(\"INFORMATION\", info);\n      if (info === null || info === void 0 ? void 0 : info.error) {\n        setInfo({ ...info,\n          error: info.error\n        });\n      } else {\n        const clientToken = info === null || info === void 0 ? void 0 : info.clientToken;\n        setInfo({\n          clientToken\n        });\n      }\n    });\n  };\n\n  const showbtdropIn = () => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, info.clientToken !== null && products.length > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(DropIn, {\n      options: {\n        authorization: info.clientToken\n      },\n      onInstance: instance => info.instance = instance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-block btn-success\",\n      onClick: onPurchase,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Buy\")) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Please login or add something to cart\"));\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n\n  const onPurchase = () => {\n    setInfo({\n      loading: true\n    });\n    let nonce;\n    let getNonce = info.instance.requestPaymentMethod().then(data => {\n      nonce = data.nonce;\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: getAmount()\n      };\n      processPayment(userId, token, paymentData).then(response => {\n        setInfo({ ...info,\n          success: response.success,\n          loading: false\n        });\n        console.log(\"PAYMENT SUCCESS\");\n        const orderData = {\n          products: products,\n          transaction_id: response.transaction.id,\n          amount: response.transaction.amount\n        };\n        createOrder(userId, token, orderData);\n        cartEmpty(() => {\n          console.log(\"Did we got a crash?\");\n        });\n        setReload(!reload);\n      }).catch(error => {\n        setInfo({\n          loading: false,\n          success: false\n        });\n        console.log(\"PAYMENT FAILED\");\n      });\n    });\n  };\n\n  const getAmount = () => {\n    let amount = 0;\n    products.map(p => {\n      amount = amount + p.price;\n    });\n    return amount;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Your bill is \", getAmount(), \" $\"), showbtdropIn());\n};\n\nexport default Paymentb;","map":{"version":3,"sources":["D:/Projects/MernStackBootCamp/frontEnd/src/core/Paymentb.js"],"names":["React","useState","useEffect","loadCart","cartEmpty","Link","getmeToken","processPayment","createOrder","isAutheticated","DropIn","Paymentb","products","setReload","f","reload","undefined","info","setInfo","loading","success","clientToken","error","instance","userId","user","_id","token","getToken","then","showbtdropIn","length","authorization","onPurchase","nonce","getNonce","requestPaymentMethod","data","paymentData","paymentMethodNonce","amount","getAmount","response","console","log","orderData","transaction_id","transaction","id","catch","map","p","price"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { loadCart, cartEmpty } from \"./helper/cartHelper\";\nimport { Link } from \"react-router-dom\";\nimport { getmeToken, processPayment } from \"./helper/paymentbhelper\";\nimport { createOrder } from \"./helper/orderHelper\";\nimport { isAutheticated } from \"../auth/helper\";\n\nimport DropIn from \"braintree-web-drop-in-react\";\n\nconst Paymentb = ({ products, setReload = f => f, reload = undefined }) => {\n  const [info, setInfo] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: \"\",\n    instance: {}\n  });\n\n  const userId = isAutheticated() && isAutheticated().user._id;\n  const token = isAutheticated() && isAutheticated().token;\n\n  const getToken = (userId, token) => {\n    getmeToken(userId, token).then(info => {\n      // console.log(\"INFORMATION\", info);\n      if (info?.error) {\n        setInfo({ ...info, error: info.error });\n      } else {\n        const clientToken = info?.clientToken;\n        setInfo({ clientToken });\n      }\n    });\n  };\n\n  const showbtdropIn = () => {\n    return (\n      <div>\n        {info.clientToken !== null && products.length > 0 ? (\n          <div>\n            <DropIn\n              options={{ authorization: info.clientToken }}\n              onInstance={instance => (info.instance = instance)}\n            />\n            <button className=\"btn btn-block btn-success\" onClick={onPurchase}>\n              Buy\n            </button>\n          </div>\n        ) : (\n          <h3>Please login or add something to cart</h3>\n        )}\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n\n  const onPurchase = () => {\n    setInfo({ loading: true });\n    let nonce;\n    let getNonce = info.instance.requestPaymentMethod().then(data => {\n      nonce = data.nonce;\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: getAmount()\n      };\n      processPayment(userId, token, paymentData)\n        .then(response => {\n          setInfo({ ...info, success: response.success, loading: false });\n          console.log(\"PAYMENT SUCCESS\");\n          const orderData = {\n            products: products,\n            transaction_id: response.transaction.id,\n            amount: response.transaction.amount\n          };\n          createOrder(userId, token, orderData);\n          cartEmpty(() => {\n            console.log(\"Did we got a crash?\");\n          });\n\n          setReload(!reload);\n        })\n        .catch(error => {\n          setInfo({ loading: false, success: false });\n          console.log(\"PAYMENT FAILED\");\n        });\n    });\n  };\n\n  const getAmount = () => {\n    let amount = 0;\n    products.map(p => {\n      amount = amount + p.price;\n    });\n    return amount;\n  };\n\n  return (\n    <div>\n      <h3>Your bill is {getAmount()} $</h3>\n      {showbtdropIn()}\n    </div>\n  );\n};\n\nexport default Paymentb;\n"]},"metadata":{},"sourceType":"module"}