{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\MernStackBootCamp\\\\frontEnd\\\\src\\\\user\\\\Signin.js\";\nimport React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Redirect } from \"react-router-dom\";\nimport { signin, authenticate, isAutheticated } from \"../auth/helper\";\n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    loading: false,\n    didRedirect: false\n  });\n  const {\n    email,\n    password,\n    error,\n    loading,\n    didRedirect\n  } = values;\n  const {\n    user\n  } = isAutheticated();\n\n  const handleChange = name => event => {\n    setValues({ ...values,\n      error: false,\n      [name]: event.target.value\n    });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values,\n      error: false,\n      loading: true\n    });\n    signin({\n      email,\n      password\n    }).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error,\n          loading: false\n        });\n      } else {\n        authenticate(data, () => {\n          setValues({ ...values,\n            didRedirect: true\n          });\n        });\n      }\n    }).catch(console.log(\"signin request failed\"));\n  };\n\n  const performRedirect = () => {\n    if (didRedirect) {\n      if (user && user.role === 1) {\n        return React.createElement(Redirect, {\n          to: \"/admin/dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(Redirect, {\n          to: \"/user/dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n      }\n    }\n\n    if (isAutheticated()) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    }\n  };\n\n  const loadingMessage = () => {\n    return loading && React.createElement(\"div\", {\n      className: \"alert alert-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Loading...\"));\n  };\n\n  const errorMessage = () => {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 offset-sm-3 text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, error)));\n  };\n\n  const signInForm = () => {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 offset-sm-3 text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      onChange: handleChange(\"email\"),\n      value: email,\n      className: \"form-control\",\n      type: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      onChange: handleChange(\"password\"),\n      value: password,\n      className: \"form-control\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: onSubmit,\n      className: \"btn btn-success btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Submit\"))));\n  };\n\n  return React.createElement(Base, {\n    title: \"Sign In page\",\n    description: \"A page for user to sign in!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, loadingMessage(), errorMessage(), signInForm(), performRedirect(), React.createElement(\"p\", {\n    className: \"text-white text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, JSON.stringify(values)));\n};\n\nexport default Signin;","map":{"version":3,"sources":["D:/Projects/MernStackBootCamp/frontEnd/src/user/Signin.js"],"names":["React","useState","Base","Redirect","signin","authenticate","isAutheticated","Signin","values","setValues","email","password","error","loading","didRedirect","user","handleChange","name","event","target","value","onSubmit","preventDefault","then","data","catch","console","log","performRedirect","role","loadingMessage","errorMessage","display","signInForm","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,cAA/B,QAAqD,gBAArD;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC;AACnCS,IAAAA,KAAK,EAAE,EAD4B;AAEnCC,IAAAA,QAAQ,EAAE,EAFyB;AAGnCC,IAAAA,KAAK,EAAE,EAH4B;AAInCC,IAAAA,OAAO,EAAE,KAJ0B;AAKnCC,IAAAA,WAAW,EAAE;AALsB,GAAD,CAApC;AAQA,QAAM;AAAEJ,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA,OAA1B;AAAmCC,IAAAA;AAAnC,MAAmDN,MAAzD;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAWT,cAAc,EAA/B;;AAEA,QAAMU,YAAY,GAAGC,IAAI,IAAIC,KAAK,IAAI;AACpCT,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaI,MAAAA,KAAK,EAAE,KAApB;AAA2B,OAACK,IAAD,GAAQC,KAAK,CAACC,MAAN,CAAaC;AAAhD,KAAD,CAAT;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAGH,KAAK,IAAI;AACxBA,IAAAA,KAAK,CAACI,cAAN;AACAb,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaI,MAAAA,KAAK,EAAE,KAApB;AAA2BC,MAAAA,OAAO,EAAE;AAApC,KAAD,CAAT;AACAT,IAAAA,MAAM,CAAC;AAAEM,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,CAAN,CACGY,IADH,CACSC,IAAD,IAAU;AACd,UAAIA,IAAI,CAACZ,KAAT,EAAgB;AACdH,QAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaI,UAAAA,KAAK,EAAEY,IAAI,CAACZ,KAAzB;AAAgCC,UAAAA,OAAO,EAAE;AAAzC,SAAD,CAAT;AACD,OAFD,MAEO;AACLR,QAAAA,YAAY,CAACmB,IAAD,EAAO,MAAM;AACvBf,UAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAERM,YAAAA,WAAW,EAAE;AAFL,WAAD,CAAT;AAID,SALW,CAAZ;AAMD;AACF,KAZH,EAaGW,KAbH,CAaSC,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAbT;AAcD,GAjBD;;AAmBA,QAAMC,eAAe,GAAG,MAAM;AAC5B,QAAId,WAAJ,EAAiB;AACf,UAAIC,IAAI,IAAIA,IAAI,CAACc,IAAL,KAAc,CAA1B,EAA6B;AAC3B,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO;AACL,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF;;AACD,QAAIvB,cAAc,EAAlB,EAAsB;AACpB,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF,GAXD;;AAaA,QAAMwB,cAAc,GAAG,MAAM;AAC3B,WACEjB,OAAO,IACL;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAFJ;AAOD,GARD;;AAUA,QAAMkB,YAAY,GAAG,MAAM;AACzB,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,oBADZ;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAEpB,KAAK,GAAG,EAAH,GAAQ;AAAxB,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,KAJH,CADF,CADF,CADF;AAYD,GAbD;;AAeA,QAAMqB,UAAU,GAAG,MAAM;AACvB,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AACE,MAAA,QAAQ,EAAEjB,YAAY,CAAC,OAAD,CADxB;AAEE,MAAA,KAAK,EAAEN,KAFT;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAWE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACE,MAAA,QAAQ,EAAEM,YAAY,CAAC,UAAD,CADxB;AAEE,MAAA,KAAK,EAAEL,QAFT;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAXF,EAoBE;AAAQ,MAAA,OAAO,EAAEU,QAAjB;AAA2B,MAAA,SAAS,EAAC,2BAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF,CADF,CADF,CADF;AA8BD,GA/BD;;AAiCA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,cAAZ;AAA2B,IAAA,WAAW,EAAC,6BAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,cAAc,EADjB,EAEGC,YAAY,EAFf,EAGGE,UAAU,EAHb,EAIGL,eAAe,EAJlB,EAME;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCM,IAAI,CAACC,SAAL,CAAe3B,MAAf,CAAvC,CANF,CADF;AAUD,CApHD;;AAsHA,eAAeD,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { signin, authenticate, isAutheticated } from \"../auth/helper\";\n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    loading: false,\n    didRedirect: false\n  });\n\n  const { email, password, error, loading, didRedirect } = values;\n  const { user } = isAutheticated();\n\n  const handleChange = name => event => {\n    setValues({ ...values, error: false, [name]: event.target.value });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: false, loading: true });\n    signin({ email, password })\n      .then((data) => {\n        if (data.error) {\n          setValues({ ...values, error: data.error, loading: false });\n        } else {\n          authenticate(data, () => {\n            setValues({\n              ...values,\n              didRedirect: true\n            });\n          });\n        }\n      })\n      .catch(console.log(\"signin request failed\"));\n  };\n\n  const performRedirect = () => {\n    if (didRedirect) {\n      if (user && user.role === 1) {\n        return <Redirect to=\"/admin/dashboard\" />;\n      } else {\n        return <Redirect to=\"/user/dashboard\" />;\n      }\n    }\n    if (isAutheticated()) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  const loadingMessage = () => {\n    return (\n      loading && (\n        <div className=\"alert alert-info\">\n          <h2>Loading...</h2>\n        </div>\n      )\n    );\n  };\n\n  const errorMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const signInForm = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <form>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Email</label>\n              <input\n                onChange={handleChange(\"email\")}\n                value={email}\n                className=\"form-control\"\n                type=\"email\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"text-light\">Password</label>\n              <input\n                onChange={handleChange(\"password\")}\n                value={password}\n                className=\"form-control\"\n                type=\"password\"\n              />\n            </div>\n            <button onClick={onSubmit} className=\"btn btn-success btn-block\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Sign In page\" description=\"A page for user to sign in!\">\n      {loadingMessage()}\n      {errorMessage()}\n      {signInForm()}\n      {performRedirect()}\n\n      <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\n    </Base>\n  );\n};\n\nexport default Signin;\n"]},"metadata":{},"sourceType":"module"}